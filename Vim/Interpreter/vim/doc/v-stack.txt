*v#stack.txt*       Drop shit here, git and move it then

===============================================================================
Stack ~





" file is large from 10mb
let g:LargeFile = 1024 * 1024 * 10
augroup LargeFile 
 autocmd BufReadPre * let f=getfsize(expand("<afile>")) | if f > g:LargeFile || f == -2 | call LargeFile() | endif
augroup END

function LargeFile()
 " no syntax highlighting etc
 set eventignore+=FileType
 " save memory when other file is viewed
 setlocal bufhidden=unload
 " is read-only (write with :w new_filename)
 setlocal buftype=nowrite
 " no undo possible
 setlocal undolevels=-1
 " display message
 autocmd VimEnter *  echo "The file is larger than " . (g:LargeFile / 1024 / 1024) . " MB, so some options are changed (see .vimrc for details)."
endfunction


Ctrl+a 	Increment number under the cursor
Ctrl+x 	Decrement number under cursor
ggVGg? 	Change text to Rot13
g~~ 	Invert case
ggguG 	Set all text to lowercase



===============================================================================
                                                                        *v#os*
Os ~
  
ftype code="C:\gvim.exe" --remote-tab-silent "%1"
assoc .py code 
# if you don't know to what python is asso type "assoc .py"

:oldfiles
:browse oldfiles


		set nrformats=
	:e ++ff=unix
	inoremap <C-X><C-S> <C-O>:set completefunc=syntaxcomplete#Complete<CR><C-X><C-U>
	inoremap <C-x><C-z> <C-o>:set completefunc=SimpleComplete<CR><C-x><C-u>
	imap 
	imap <expr> aa pumvisible() ? "<ESC>:echo 'yes'<CR>" : "<ESC>:echo 'no'<CR>"
	:command -complete=file -nargs=1 OpenFile e <args>
	setlocal omnifunc=syntaxcomplete#Complete

	setlocal omnifunc=syntaxcomplete#Complete
	inoremap <expr><C-X><C-S> neocomplete#start_manual_complete()

	Cv Cj insert \%x00 and can be used as a line separator
	? How to complete keyword





	:set virtualedit=all
	highlight LineNr ctermfg=grey ctermbg=white
	:highlight NonText ctermfg=12  # to display ~ for empay lines
	let &colorcolumn=join(range(81,999),",")


cpp 
	CSearchContext for elcim and <C-X> <C-O>
	youcompleteme, clang_complete or cpp_omnicomplete with ctags, or eclim (currently what I use
	You can use gn in version 7.4 onwards (and gN to go backwards). It replaces the v//e trick.

		Search forward for the last used search pattern, like with `n`, and start Visual mode to select the match










	Jav afunction names 
	\v(public|protected|private|static|\s) +(\w|\<|\>|\[|\])+ *\s+\zs\w+\ze *\([^()]*\)


		:set fileformat  # UNIX window
		map ,a :let mycurf=expand("<cfile>")<cr><c-w>w:execute("e ".mycurf)<cr><c-w>p

		"background color 
		:highlight Normal ctermfg=grey ctermbg=darkblue
		make good fold 

au FileType python setlocal formatprg=autopep8\ -


vim: ft=myhelp:set modificable  
